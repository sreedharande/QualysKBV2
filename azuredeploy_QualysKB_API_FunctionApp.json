{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"FunctionName": {
			"type": "string",
			"minLength": 1,
			"maxLength": 11,
			"defaultValue": "QualysKB"
		},
		"WorkspaceID": {
			"type": "string",
			"minLength": 36,
			"maxLength": 36,
			"metadata": {
				"description": "Sentinel Log Analytics Workspace ID"
			}
		},
		"WorkspaceKey": {
			"type": "securestring",
			"minLength": 88,
			"maxLength": 88,
			"metadata": {
				"description": "Sentinel Log Analytics Workspace Primary/Secondary Key"
			}
		},
		"APIUsername": {
			"type": "string",
			"metadata": {
				"description": "Qualys KB API User Name"
			}
		},
		"APIPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Qualys KB API Password"
			}
		},
		"Uri": {
			"type": "string",
			"defaultValue": "https://qualysapi.qualys.com/api/2.0"			
		},
		"FirstStartTimeRecord": {
			"type": "string",
			"metadata": {
				"description": "For example: MM/DD/YYYY"
			}
		},
		"OptionalFilterParameters": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "For example: id_min=12345&id_max=23456&is_patchable=1"
			}
		},
		"FunctionSchedule": {
			"type": "string",
			"defaultValue": "0 */10 * * * *",
			"metadata": {
				"description": "For a `TimerTrigger` to work, you provide a schedule in the form of a [cron expression](https://en.wikipedia.org/wiki/Cron#CRON_expression)(See the link for full details). A cron expression is a string with 6 separate expressions which represent a given schedule via patterns. The pattern we use to represent every 1 hour is `0 0 * * * *`. This, in plain text, means: When seconds is equal to 0, minutes is divisible by 5, for any hour, day of the month, month, day of the week, or year"
			}
		}
	},
	"variables": {
		"FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id))]",
		"StorageAccountName": "[concat(substring(variables('FunctionName'), 0, 20), 'sa')]",
		"KeyVaultName": "[concat(substring(variables('FunctionName'), 0, 20), 'kv')]",
		"QualysAPIToken": "QualysAPIToken",
		"LogAnalyticsWorkspaceKey": "LogAnalyticsWorkspaceKey",		
		"StorageSuffix": "[environment().suffixes.storage]",
		"HostingPlanName": "[concat('ASP-',substring(variables('FunctionName'), 0, 20))]",
		"LogAnaltyicsUri": "[replace(environment().portal, 'https://portal', concat('https://', toLower(parameters('WorkspaceId')), '.ods.opinsights'))]"
	},
	"resources": [
		{
			"type": "Microsoft.Insights/components",
			"apiVersion": "2015-05-01",
			"name": "[variables('FunctionName')]",
			"location": "[resourceGroup().location]",
			"kind": "web",
			"properties": {
				"Application_Type": "web",
				"ApplicationId": "[variables('FunctionName')]"
			}
		},
		{
			"name": "[variables('StorageAccountName')]",
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2022-05-01",
			"location": "[resourceGroup().location]",
			"properties": {
				"accessTier": "Hot",
				"minimumTlsVersion": "TLS1_2",
				"supportsHttpsTrafficOnly": "true",
				"publicNetworkAccess": "Disabled",
				"allowBlobPublicAccess": "false",
				"allowSharedKeyAccess": "true",
				"allowCrossTenantReplication": "true",
				"defaultToOAuthAuthentication": "false",
				"networkAcls": {
					"bypass": "AzureServices",
					"defaultAction": "Deny",
					"ipRules": []
				},
				"dnsEndpointType": "Standard",
				"encryption": {
					"keySource": "Microsoft.Storage",
					"services": {
						"blob": {
							"enabled": "true"
						},
						"file": {
							"enabled": "true"
						},
						"table": {
							"enabled": "true"
						},
						"queue": {
							"enabled": "true"
						}
					},
					"requireInfrastructureEncryption": "false"
				}
			},
			"dependsOn": [],
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"kind": "StorageV2",
			"tags": {}
		},
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2018-02-01",
			"name": "[variables('HostingPlanName')]",
			"location": "[resourceGroup().location]",			
			"kind": "elastic",
			"tags": {},
            "dependsOn": [],
			"properties": {				
				"targetWorkerCount": "2",
                "targetWorkerSizeId": "3",                
                "reserved": true,
                "maximumElasticWorkerCount": "20"
			},
			"sku": {
                "tier": "ElasticPremium",
                "name": "EP1"
            }
		},
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices",
			"apiVersion": "2019-06-01",
			"name": "[concat(variables('StorageAccountName'), '/default')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
			],
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"properties": {
				"cors": {
					"corsRules": []
				},
				"deleteRetentionPolicy": {
					"enabled": false
				}
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/fileServices",
			"apiVersion": "2019-06-01",
			"name": "[concat(variables('StorageAccountName'), '/default')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
			],
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"properties": {
				"cors": {
					"corsRules": []
				}
			}
		},
		{
			"type": "Microsoft.Web/sites",
			"apiVersion": "2018-11-01",
			"name": "[variables('FunctionName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
				"[resourceId('Microsoft.Web/serverfarms/', variables('HostingPlanName'))]",
				"[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
			],
			"kind": "functionapp",
			"identity": {
				"type": "SystemAssigned"
			},
			"properties": {
				"name": "[variables('FunctionName')]",
				"serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('HostingPlanName'))]",
				"httpsOnly": true,
				"clientAffinityEnabled": true,
				"alwaysOn": true,
				"siteConfig": {
					"powerShellVersion": "~7"
				}
			},
			"resources": [
				{
					"apiVersion": "2018-11-01",
					"type": "config",
					"name": "appsettings",
					"dependsOn": [
						"[concat('Microsoft.Web/sites/', variables('FunctionName'))]",
						"[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('QualysAPIToken'))]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('LogAnalyticsWorkspaceKey'))]"
					],
					"properties": {
						"FUNCTIONS_EXTENSION_VERSION": "~4",
						"FUNCTIONS_WORKER_RUNTIME": "powershell",
						"APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
						"APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
						"AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageAccountName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
						"WEBSITE_CONTENTOVERVNET" : 1,
						"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageAccountName')),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
						"WEBSITE_CONTENTSHARE": "[toLower(variables('FunctionName'))]",
						"workspaceID": "[parameters('WorkspaceID')]",
						"workspaceKey": "[parameters('WorkspaceKey')]",
						"apiUsername": "[parameters('APIUsername')]",
						"apiPassword": "[parameters('APIPassword')]",
						"uri": "[parameters('Uri')]",
						"filterParameters": "[parameters('OptionalFilterParameters')]",
						"logAnalyticsUri": "[variables('LogAnaltyicsUri')]",
						"firstStartTimeRecord": "[parameters('FirstStartTimeRecord')]",
						"Schedule": "[parameters('FunctionSchedule')]",
						"WEBSITE_RUN_FROM_PACKAGE": "https://github.com/sreedharande/QualysKBV2/blob/main/AzureFunctionQualysKB.zip?raw=true"
					}
				}
			]
		},
		{
			"type": "Microsoft.KeyVault/vaults",
			"apiVersion": "2016-10-01",
			"name": "[variables('KeyVaultName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', variables('FunctionName'))]"
			],
			"properties": {
				"sku": {
					"family": "A",
					"name": "Standard"
				},
				"tenantId": "[subscription().tenantId]",
				"accessPolicies": [
					{
						"tenantId": "[subscription().tenantId]",
						"objectId": "[reference(resourceId('Microsoft.Web/sites', variables('FunctionName')),'2019-08-01', 'full').identity.principalId]",
						"permissions": {
							"secrets": [
								"get",
								"list"
							]
						}
					}
				],
				"enabledForDeployment": false,
				"enabledForDiskEncryption": false,
				"enabledForTemplateDeployment": true,
				"enableSoftDelete": true
			},
			"resources": [
				{
					"type": "secrets",
					"apiVersion": "2016-10-01",
					"name": "[variables('QualysAPIToken')]",
					"dependsOn": [
						"[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
					],
					"properties": {
						"value": "[parameters('APIPassword')]",
						"contentType": "string",
						"attributes": {
							"enabled": true
						}
					}
				},
				{
					"type": "secrets",
					"apiVersion": "2016-10-01",
					"name": "[variables('LogAnalyticsWorkspaceKey')]",
					"dependsOn": [
						"[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
					],
					"properties": {
						"value": "[parameters('WorkspaceKey')]",
						"contentType": "string",
						"attributes": {
							"enabled": true
						}
					}
				}
			]
		},
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices/containers",
			"apiVersion": "2019-06-01",
			"name": "[concat(variables('StorageAccountName'), '/default/azure-webjobs-hosts')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
			],
			"properties": {
				"publicAccess": "None"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices/containers",
			"apiVersion": "2019-06-01",
			"name": "[concat(variables('StorageAccountName'), '/default/azure-webjobs-secrets')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
			],
			"properties": {
				"publicAccess": "None"
			}
		},		
		{
			"type": "Microsoft.Storage/storageAccounts/fileServices/shares",
			"apiVersion": "2019-06-01",
			"name": "[concat(variables('StorageAccountName'), '/default/', tolower(variables('StorageAccountName')))]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('StorageAccountName'), 'default')]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
			],
			"properties": {
				"shareQuota": 5120
			}
		}
	]
}